:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ImageFrames.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ImageFrames:

ImageFrames
===========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

A container for :ref:`Image<class_Image>` frames.

Description
-----------

A class used to load and arrange a sequence of image frames. Allows to load animated image formats externally (only GIF is supported currently). Each frame can specify a delay for animated images. The data can then be used to generate an :ref:`AnimatedTexture<class_AnimatedTexture>` or a :ref:`SpriteFrames<class_SpriteFrames>` via script.

Methods
-------

+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`add_frame<class_ImageFrames_method_add_frame>` **(** :ref:`Image<class_Image>` image, :ref:`float<class_float>` delay, :ref:`int<class_int>` idx=-1 **)**           |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`clear<class_ImageFrames_method_clear>` **(** **)**                                                                                                                  |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`get_frame_count<class_ImageFrames_method_get_frame_count>` **(** **)** |const|                                                                                      |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`get_frame_delay<class_ImageFrames_method_get_frame_delay>` **(** :ref:`int<class_int>` idx **)** |const|                                                            |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>`             | :ref:`get_frame_image<class_ImageFrames_method_get_frame_image>` **(** :ref:`int<class_int>` idx **)** |const|                                                            |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`load<class_ImageFrames_method_load>` **(** :ref:`String<class_String>` path, :ref:`int<class_int>` max_frames=0 **)**                                               |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`load_gif_from_buffer<class_ImageFrames_method_load_gif_from_buffer>` **(** :ref:`PoolByteArray<class_PoolByteArray>` data, :ref:`int<class_int>` max_frames=0 **)** |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`remove_frame<class_ImageFrames_method_remove_frame>` **(** :ref:`int<class_int>` idx **)**                                                                          |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_frame_delay<class_ImageFrames_method_set_frame_delay>` **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` delay **)**                                   |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_frame_image<class_ImageFrames_method_set_frame_image>` **(** :ref:`int<class_int>` idx, :ref:`Image<class_Image>` image **)**                                   |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Method Descriptions
-------------------

.. _class_ImageFrames_method_add_frame:

- void **add_frame** **(** :ref:`Image<class_Image>` image, :ref:`float<class_float>` delay, :ref:`int<class_int>` idx=-1 **)**

Adds a new frame.

----

.. _class_ImageFrames_method_clear:

- void **clear** **(** **)**

Removes all frames.

----

.. _class_ImageFrames_method_get_frame_count:

- :ref:`int<class_int>` **get_frame_count** **(** **)** |const|

Returns the total number of frames.

----

.. _class_ImageFrames_method_get_frame_delay:

- :ref:`float<class_float>` **get_frame_delay** **(** :ref:`int<class_int>` idx **)** |const|

Returns the delay of frame ``idx``.

----

.. _class_ImageFrames_method_get_frame_image:

- :ref:`Image<class_Image>` **get_frame_image** **(** :ref:`int<class_int>` idx **)** |const|

Returns the :ref:`Image<class_Image>` of frame ``idx``.

----

.. _class_ImageFrames_method_load:

- :ref:`Error<enum_@GlobalScope_Error>` **load** **(** :ref:`String<class_String>` path, :ref:`int<class_int>` max_frames=0 **)**

Loads the data from a file located at ``path``. Recognizes the following file extensions: ``gif``. The ``max_frames`` parameter limits the number of frames which can be loaded.

----

.. _class_ImageFrames_method_load_gif_from_buffer:

- :ref:`Error<enum_@GlobalScope_Error>` **load_gif_from_buffer** **(** :ref:`PoolByteArray<class_PoolByteArray>` data, :ref:`int<class_int>` max_frames=0 **)**

Loads the data from a :ref:`PoolByteArray<class_PoolByteArray>` GIF buffer. The ``max_frames`` parameter limits the number of frames which can be loaded.

----

.. _class_ImageFrames_method_remove_frame:

- void **remove_frame** **(** :ref:`int<class_int>` idx **)**

Removes the frame ``idx``.

----

.. _class_ImageFrames_method_set_frame_delay:

- void **set_frame_delay** **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` delay **)**

Sets the delay in seconds of frame ``idx``.

----

.. _class_ImageFrames_method_set_frame_image:

- void **set_frame_image** **(** :ref:`int<class_int>` idx, :ref:`Image<class_Image>` image **)**

Sets the :ref:`Image<class_Image>` of frame ``idx``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`