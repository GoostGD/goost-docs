:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GoostGeometry2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GoostGeometry2D:

GoostGeometry2D
===============

**Inherits:** :ref:`Object<class_Object>`

:ref:`Geometry<class_Geometry>` singleton extension.

Description
-----------

Performs polygon clipping, offsetting and decomposition, and other geometry utility operations mostly revolving around polygons and polylines.

Tutorials
---------

- `https://goost.readthedocs.io/en/gd3/components/geometry.html <https://goost.readthedocs.io/en/gd3/components/geometry.html>`_

Methods
-------

+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>` | :ref:`circle<class_GoostGeometry2D_method_circle>` **(** :ref:`float<class_float>` radius, :ref:`float<class_float>` max_error=0.25 **)** |const|                                                                                                                                                                                                 |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`clip_multiple_polygons<class_GoostGeometry2D_method_clip_multiple_polygons>` **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                                                      |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`clip_multiple_polylines_with_polygons<class_GoostGeometry2D_method_clip_multiple_polylines_with_polygons>` **(** :ref:`Array<class_Array>` polylines, :ref:`Array<class_Array>` polygons, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                           |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`clip_polygons<class_GoostGeometry2D_method_clip_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                              |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`clip_polyline_with_polygon<class_GoostGeometry2D_method_clip_polyline_with_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                       |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`decompose_multiple_polygons_into_convex<class_GoostGeometry2D_method_decompose_multiple_polygons_into_convex>` **(** :ref:`Array<class_Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|                                                                                               |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`decompose_polygon_into_convex<class_GoostGeometry2D_method_decompose_polygon_into_convex>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|                                                                                             |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`decompose_polygons<class_GoostGeometry2D_method_decompose_polygons>` **(** :ref:`PolyDecompType<enum_GoostGeometry2D_PolyDecompType>` type, :ref:`Array<class_Array>` polygons, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|                                                                       |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`deflate_multiple_polygons<class_GoostGeometry2D_method_deflate_multiple_polygons>` **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                         |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`deflate_multiple_polylines<class_GoostGeometry2D_method_deflate_multiple_polylines>` **(** :ref:`Array<class_Array>` polylines, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                      |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`deflate_polygon<class_GoostGeometry2D_method_deflate_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                        |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`deflate_polyline<class_GoostGeometry2D_method_deflate_polyline>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                     |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`exclude_multiple_polygons<class_GoostGeometry2D_method_exclude_multiple_polygons>` **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                                                |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`exclude_polygons<class_GoostGeometry2D_method_exclude_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                        |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`inflate_multiple_polygons<class_GoostGeometry2D_method_inflate_multiple_polygons>` **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                         |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`inflate_polygon<class_GoostGeometry2D_method_inflate_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                        |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`intersect_multiple_polygons<class_GoostGeometry2D_method_intersect_multiple_polygons>` **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                                            |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`intersect_multiple_polylines_with_polygons<class_GoostGeometry2D_method_intersect_multiple_polylines_with_polygons>` **(** :ref:`Array<class_Array>` polylines, :ref:`Array<class_Array>` polygons, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                 |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`intersect_polygons<class_GoostGeometry2D_method_intersect_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                    |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`intersect_polyline_with_polygon<class_GoostGeometry2D_method_intersect_polyline_with_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                             |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`merge_multiple_polygons<class_GoostGeometry2D_method_merge_multiple_polygons>` **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b=null, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                                               |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`merge_polygons<class_GoostGeometry2D_method_merge_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|                                                            |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`offset_multiple_polygons<class_GoostGeometry2D_method_offset_multiple_polygons>` **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                           |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`offset_polygon<class_GoostGeometry2D_method_offset_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|                                                                                          |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`point_in_polygon<class_GoostGeometry2D_method_point_in_polygon>` **(** :ref:`Vector2<class_Vector2>` point, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                                                                                           |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`polygon_area<class_GoostGeometry2D_method_polygon_area>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                                                                                                                                        |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                   | :ref:`polygon_centroid<class_GoostGeometry2D_method_polygon_centroid>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                                                                                                                                |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`polygon_perimeter<class_GoostGeometry2D_method_polygon_perimeter>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                                                                                                                              |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>` **(** :ref:`PolyBooleanOperation<enum_GoostGeometry2D_PolyBooleanOperation>` operation, :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b=null, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|           |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PolyNode2D<class_PolyNode2D>`             | :ref:`polygons_boolean_tree<class_GoostGeometry2D_method_polygons_boolean_tree>` **(** :ref:`PolyBooleanOperation<enum_GoostGeometry2D_PolyBooleanOperation>` operation, :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b=null, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const| |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`polyline_length<class_GoostGeometry2D_method_polyline_length>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline **)** |const|                                                                                                                                                                                                 |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>` | :ref:`regular_polygon<class_GoostGeometry2D_method_regular_polygon>` **(** :ref:`int<class_int>` sides, :ref:`float<class_float>` size=64.0 **)** |const|                                                                                                                                                                                         |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`triangulate_multiple_polygons<class_GoostGeometry2D_method_triangulate_multiple_polygons>` **(** :ref:`Array<class_Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|                                                                                                                   |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`triangulate_polygon<class_GoostGeometry2D_method_triangulate_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|                                                                                                                 |
+-------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_GoostGeometry2D_PolyBooleanOperation:

.. _class_GoostGeometry2D_constant_OPERATION_NONE:

.. _class_GoostGeometry2D_constant_OPERATION_UNION:

.. _class_GoostGeometry2D_constant_OPERATION_DIFFERENCE:

.. _class_GoostGeometry2D_constant_OPERATION_INTERSECTION:

.. _class_GoostGeometry2D_constant_OPERATION_XOR:

enum **PolyBooleanOperation**:

- **OPERATION_NONE** = **0** --- No-op, but may perform polygons fixup, build hierarchy, depending on the poly_boolean implementation.

- **OPERATION_UNION** = **1** --- Merge (combine) polygons.

- **OPERATION_DIFFERENCE** = **2** --- Clip (cut) polygons or polylines.

- **OPERATION_INTERSECTION** = **3** --- Intersect polygons or polylines.

- **OPERATION_XOR** = **4** --- Mutually exclude polygons.

----

.. _enum_GoostGeometry2D_PolyDecompType:

.. _class_GoostGeometry2D_constant_DECOMP_TRIANGLES_EC:

.. _class_GoostGeometry2D_constant_DECOMP_TRIANGLES_OPT:

.. _class_GoostGeometry2D_constant_DECOMP_TRIANGLES_MONO:

.. _class_GoostGeometry2D_constant_DECOMP_CONVEX_HM:

.. _class_GoostGeometry2D_constant_DECOMP_CONVEX_OPT:

enum **PolyDecompType**:

- **DECOMP_TRIANGLES_EC** = **0** --- Triangulate a polygon using the ear clipping algorithm.

Time/Space complexity: O(n^2)/O(n).

- **DECOMP_TRIANGLES_OPT** = **1** --- Optimal triangulation in terms of edge length using dynamic programming algorithm.

Time/Space complexity: O(n^3)/O(n^2).

- **DECOMP_TRIANGLES_MONO** = **2** --- Partition the polygon into monotone polygons, then triangulate.

Time/Space complexity: O(n\*log(n))/O(n).

- **DECOMP_CONVEX_HM** = **3** --- Convex polygon partitioning using Hertel-Mehlhorn algorithm.

Time/Space complexity: O(n^2)/O(n).

- **DECOMP_CONVEX_OPT** = **4** --- Optimal convex partition using dynamic programming algorithm by Keil and Snoeyink.

Time/Space complexity: O(n^3)/O(n^3).

Method Descriptions
-------------------

.. _class_GoostGeometry2D_method_circle:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **circle** **(** :ref:`float<class_float>` radius, :ref:`float<class_float>` max_error=0.25 **)** |const|

Generates a closed path approximating the shape of a circle with the specified radius.

The ``max_error`` parameter represents the maximum gap in pixels allowed between a circle segment and the boundary of the mathematical circle, with low values increasing the number of vertices. The maximum number of vertices returned is 4096. See also :ref:`regular_polygon<class_GoostGeometry2D_method_regular_polygon>`.

----

.. _class_GoostGeometry2D_method_clip_multiple_polygons:

- :ref:`Array<class_Array>` **clip_multiple_polygons** **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_DIFFERENCE<class_GoostGeometry2D_constant_OPERATION_DIFFERENCE>` between the polygons specifically.

----

.. _class_GoostGeometry2D_method_clip_multiple_polylines_with_polygons:

- :ref:`Array<class_Array>` **clip_multiple_polylines_with_polygons** **(** :ref:`Array<class_Array>` polylines, :ref:`Array<class_Array>` polygons, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`clip_polyline_with_polygon<class_GoostGeometry2D_method_clip_polyline_with_polygon>`, but operates on multiple polylines in batch.

----

.. _class_GoostGeometry2D_method_clip_polygons:

- :ref:`Array<class_Array>` **clip_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_DIFFERENCE<class_GoostGeometry2D_constant_OPERATION_DIFFERENCE>` between the polygons specifically, and accepts individual polygons only.

----

.. _class_GoostGeometry2D_method_clip_polyline_with_polygon:

- :ref:`Array<class_Array>` **clip_polyline_with_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Clips a single ``polyline`` against a single ``polygon`` and returns an array of clipped polylines. This performs :ref:`OPERATION_DIFFERENCE<class_GoostGeometry2D_constant_OPERATION_DIFFERENCE>` between the polyline and the polygon. Returns an empty array if the ``polygon`` completely encloses ``polyline``. This operation can be thought of as cutting a line with a closed shape.

----

.. _class_GoostGeometry2D_method_decompose_multiple_polygons_into_convex:

- :ref:`Array<class_Array>` **decompose_multiple_polygons_into_convex** **(** :ref:`Array<class_Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|

Similar to :ref:`decompose_polygons<class_GoostGeometry2D_method_decompose_polygons>`, but partitions multiple polygons with the :ref:`DECOMP_CONVEX_HM<class_GoostGeometry2D_constant_DECOMP_CONVEX_HM>`.

----

.. _class_GoostGeometry2D_method_decompose_polygon_into_convex:

- :ref:`Array<class_Array>` **decompose_polygon_into_convex** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|

Similar to :ref:`decompose_polygons<class_GoostGeometry2D_method_decompose_polygons>`, but partitions a single polygon with the :ref:`DECOMP_CONVEX_HM<class_GoostGeometry2D_constant_DECOMP_CONVEX_HM>`.

----

.. _class_GoostGeometry2D_method_decompose_polygons:

- :ref:`Array<class_Array>` **decompose_polygons** **(** :ref:`PolyDecompType<enum_GoostGeometry2D_PolyDecompType>` type, :ref:`Array<class_Array>` polygons, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|

Partitions polygons into several other convex polygons. The exact algorithm used depends on the type from :ref:`PolyDecompType<enum_GoostGeometry2D_PolyDecompType>`.

Both outer and inner polygons can be passed to cut holes during decomposition and are distinguished automatically, with potential performance cost.

**Note:** :ref:`DECOMP_TRIANGLES_OPT<class_GoostGeometry2D_constant_DECOMP_TRIANGLES_OPT>` and :ref:`DECOMP_TRIANGLES_OPT<class_GoostGeometry2D_constant_DECOMP_TRIANGLES_OPT>` do not support partitioning of a polygon with holes.

----

.. _class_GoostGeometry2D_method_deflate_multiple_polygons:

- :ref:`Array<class_Array>` **deflate_multiple_polygons** **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Similar to :ref:`offset_multiple_polygons<class_GoostGeometry2D_method_offset_multiple_polygons>`, but allows to grow polygons by the absolute value of ``delta``.

----

.. _class_GoostGeometry2D_method_deflate_multiple_polylines:

- :ref:`Array<class_Array>` **deflate_multiple_polylines** **(** :ref:`Array<class_Array>` polylines, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Similar to :ref:`deflate_polyline<class_GoostGeometry2D_method_deflate_polyline>`, but operates on multiple polylines simultaneously.

----

.. _class_GoostGeometry2D_method_deflate_polygon:

- :ref:`Array<class_Array>` **deflate_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Deflates (grows) a single ``polygon`` by ``delta`` pixels.

Each polygon's vertices will be rounded as determined by :ref:`PolyOffsetParameters2D.join_type<class_PolyOffsetParameters2D_property_join_type>`.

----

.. _class_GoostGeometry2D_method_deflate_polyline:

- :ref:`Array<class_Array>` **deflate_polyline** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Deflates (grows) ``polylines`` into polygons by ``delta`` pixels.

Each polygon's vertices will be rounded as determined by :ref:`PolyOffsetParameters2D.join_type<class_PolyOffsetParameters2D_property_join_type>`.

Each polygon's endpoints will be rounded as determined by :ref:`PolyOffsetParameters2D.end_type<class_PolyOffsetParameters2D_property_end_type>`, except for the :ref:`PolyOffsetParameters2D.END_POLYGON<class_PolyOffsetParameters2D_constant_END_POLYGON>` as it's used by polygon offsetting specifically, use :ref:`PolyOffsetParameters2D.END_JOINED<class_PolyOffsetParameters2D_constant_END_JOINED>` to grow a polyline like a closed donut instead.

----

.. _class_GoostGeometry2D_method_exclude_multiple_polygons:

- :ref:`Array<class_Array>` **exclude_multiple_polygons** **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_XOR<class_GoostGeometry2D_constant_OPERATION_XOR>` between the polygons specifically.

----

.. _class_GoostGeometry2D_method_exclude_polygons:

- :ref:`Array<class_Array>` **exclude_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_XOR<class_GoostGeometry2D_constant_OPERATION_XOR>` between the polygons specifically, and accepts individual polygons only.

----

.. _class_GoostGeometry2D_method_inflate_multiple_polygons:

- :ref:`Array<class_Array>` **inflate_multiple_polygons** **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Similar to :ref:`offset_multiple_polygons<class_GoostGeometry2D_method_offset_multiple_polygons>`, but allows to shrink polygons by the absolute value of ``delta``.

----

.. _class_GoostGeometry2D_method_inflate_polygon:

- :ref:`Array<class_Array>` **inflate_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Similar to :ref:`offset_polygon<class_GoostGeometry2D_method_offset_polygon>`, but allows to shrink a single polygon by the absolute value of ``delta``.

----

.. _class_GoostGeometry2D_method_intersect_multiple_polygons:

- :ref:`Array<class_Array>` **intersect_multiple_polygons** **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_INTERSECTION<class_GoostGeometry2D_constant_OPERATION_INTERSECTION>` between the polygons specifically.

----

.. _class_GoostGeometry2D_method_intersect_multiple_polylines_with_polygons:

- :ref:`Array<class_Array>` **intersect_multiple_polylines_with_polygons** **(** :ref:`Array<class_Array>` polylines, :ref:`Array<class_Array>` polygons, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`intersect_polyline_with_polygon<class_GoostGeometry2D_method_intersect_polyline_with_polygon>`, but operates on multiple polylines in batch.

----

.. _class_GoostGeometry2D_method_intersect_polygons:

- :ref:`Array<class_Array>` **intersect_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_INTERSECTION<class_GoostGeometry2D_constant_OPERATION_INTERSECTION>` between the polygons specifically, and accepts individual polygons only.

----

.. _class_GoostGeometry2D_method_intersect_polyline_with_polygon:

- :ref:`Array<class_Array>` **intersect_polyline_with_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Intersects polyline with polygon and returns an array of intersected polylines. This performs OPERATION_INTERSECTION between the polyline and the polygon. This operation can be thought of as chopping a line with a closed shape.

----

.. _class_GoostGeometry2D_method_merge_multiple_polygons:

- :ref:`Array<class_Array>` **merge_multiple_polygons** **(** :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b=null, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_UNION<class_GoostGeometry2D_constant_OPERATION_UNION>` between the polygons specifically.

----

.. _class_GoostGeometry2D_method_merge_polygons:

- :ref:`Array<class_Array>` **merge_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but performs :ref:`OPERATION_UNION<class_GoostGeometry2D_constant_OPERATION_UNION>` between the polygons specifically, and accepts individual polygons only.

----

.. _class_GoostGeometry2D_method_offset_multiple_polygons:

- :ref:`Array<class_Array>` **offset_multiple_polygons** **(** :ref:`Array<class_Array>` polygons, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Inflates or deflates an array of ``polygons`` by ``delta`` pixels. If ``delta`` is positive, makes the polygons grow outward. If ``delta`` is negative, shrinks the polygons inward. Returns an empty array if ``delta`` is negative and the absolute value of it approximately exceeds the minimum bounding rectangle dimensions of each of the polygons.

Each polygon's vertices will be rounded as determined by :ref:`PolyOffsetParameters2D.join_type<class_PolyOffsetParameters2D_property_join_type>`.

----

.. _class_GoostGeometry2D_method_offset_polygon:

- :ref:`Array<class_Array>` **offset_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta, :ref:`PolyOffsetParameters2D<class_PolyOffsetParameters2D>` params=null **)** |const|

Inflates or deflates a single ``polygon`` by ``delta`` pixels. If ``delta`` is positive, makes the polygon grow outward. If ``delta`` is negative, shrinks the polygon inward. Returns an empty array if ``delta`` is negative and the absolute value of it approximately exceeds the minimum bounding rectangle dimensions of the polygon.

Each polygon's vertices will be rounded as determined by :ref:`PolyOffsetParameters2D.join_type<class_PolyOffsetParameters2D_property_join_type>`.

----

.. _class_GoostGeometry2D_method_point_in_polygon:

- :ref:`int<class_int>` **point_in_polygon** **(** :ref:`Vector2<class_Vector2>` point, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Returns +1 if the point is *inside* the polygon, 0 if the point is *outside* the polygon, and -1 if the point is *exactly* on the polygon's boundary. Supports arbitrary polygons.

----

.. _class_GoostGeometry2D_method_polygon_area:

- :ref:`float<class_float>` **polygon_area** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Returns ``polygon``'s positive or negative area depending on whether vertices are ordered in counterclockwise or anticlockwise order. See also :ref:`Geometry.is_polygon_clockwise<class_Geometry_method_is_polygon_clockwise>`. If the order is clockwise, the polygon can be interpreted as an inner polygon (hole), otherwise it's an outer polygon (boundary).

----

.. _class_GoostGeometry2D_method_polygon_centroid:

- :ref:`Vector2<class_Vector2>` **polygon_centroid** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Calculates the centroid (also known as "center of mass" or "center of gravity") of the ``polygon`` and returns the consistent result regardless of polygon orientation, see :ref:`Geometry.is_polygon_clockwise<class_Geometry_method_is_polygon_clockwise>`. For accurate results, the polygon must be strictly simple, meaning there should be no self-intersecting edges.

----

.. _class_GoostGeometry2D_method_polygon_perimeter:

- :ref:`float<class_float>` **polygon_perimeter** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Returns the perimeter of an arbitrary polygon. See also :ref:`polyline_length<class_GoostGeometry2D_method_polyline_length>`.

----

.. _class_GoostGeometry2D_method_polygons_boolean:

- :ref:`Array<class_Array>` **polygons_boolean** **(** :ref:`PolyBooleanOperation<enum_GoostGeometry2D_PolyBooleanOperation>` operation, :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b=null, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Performs a boolean operation between an array of polygons, with the ``polygons_a`` acting as the *subject* of the operation. Returns an array of resulting polygons with vertices in either clockwise or counterclockwise order, which determines whether a polygon is an outer polygon (boundary) or an inner polygon (hole). The orientation of returned polygons can be checked with :ref:`Geometry.is_polygon_clockwise<class_Geometry_method_is_polygon_clockwise>`. If you need to retain the hierarchy of nested outer and inner polygons, use :ref:`polygons_boolean_tree<class_GoostGeometry2D_method_polygons_boolean_tree>` instead.

**Operations:**

:ref:`OPERATION_UNION<class_GoostGeometry2D_constant_OPERATION_UNION>`:

Merges polygons into one if they overlap in any way. Passing ``polygons_b`` is optional in this case, but you can specify a different :ref:`PolyBooleanParameters2D.clip_fill_rule<class_PolyBooleanParameters2D_property_clip_fill_rule>` for these polygons, producing different results.

This operation can also be used to convert arbitrary polygons into strictly simple ones (no self-intersections):

::

    var params = PolyBooleanParameters2D.new()
    # May not be required on some backends, but provides an explicit intention.
    params.strictly_simple = true
    var solution = GoostGeometry2D.polygons_boolean(GoostGeometry2D.OPERATION_UNION, polygons, params)

:ref:`OPERATION_DIFFERENCE<class_GoostGeometry2D_constant_OPERATION_DIFFERENCE>`:

Clips polygons, the *subject* remains intact if neither polygons overlap. Returns an empty array if ``polygons_b`` completely covers ``polygons_a``. If ``polygons_b`` are enclosed by ``polygons_a``, returns an array of boundary and hole polygons.

:ref:`OPERATION_INTERSECTION<class_GoostGeometry2D_constant_OPERATION_INTERSECTION>`:

Intersects polygons, effectively returning the common area shared by these polygons. Returns an empty array if no intersection occurs.

:ref:`OPERATION_XOR<class_GoostGeometry2D_constant_OPERATION_XOR>`:

Mutually excludes common area defined by the intersection of the polygons. In other words, returns all but common area between the polygons.

----

.. _class_GoostGeometry2D_method_polygons_boolean_tree:

- :ref:`PolyNode2D<class_PolyNode2D>` **polygons_boolean_tree** **(** :ref:`PolyBooleanOperation<enum_GoostGeometry2D_PolyBooleanOperation>` operation, :ref:`Array<class_Array>` polygons_a, :ref:`Array<class_Array>` polygons_b=null, :ref:`PolyBooleanParameters2D<class_PolyBooleanParameters2D>` params=null **)** |const|

Similar to :ref:`polygons_boolean<class_GoostGeometry2D_method_polygons_boolean>`, but builds an hierarchy of clipped polygons and returns a top-level root node representing the tree of polygons, which has some performance cost. Whether a polygon is an outer or an inner path can be checked with :ref:`PolyNode2D.is_hole<class_PolyNode2D_method_is_hole>` more easily and effectively compared to calculating polygon area to determine orientation, see :ref:`polygon_area<class_GoostGeometry2D_method_polygon_area>`.

----

.. _class_GoostGeometry2D_method_polyline_length:

- :ref:`float<class_float>` **polyline_length** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline **)** |const|

Returns the total length of the segments representing the polyline. See also :ref:`polygon_perimeter<class_GoostGeometry2D_method_polygon_perimeter>`.

----

.. _class_GoostGeometry2D_method_regular_polygon:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **regular_polygon** **(** :ref:`int<class_int>` sides, :ref:`float<class_float>` size=64.0 **)** |const|

Generates a regular polygon (triangle, rectangle, pentagon, hexagon etc.) with all equal sides and angles. The specified size can be seen as a radius, with an increasing number of sides approximating a :ref:`circle<class_GoostGeometry2D_method_circle>`.

The order of vertices returned is counterclockwise which makes it an outer polygon by default. To convert it to an inner polygon specifically, use :ref:`PoolVector2Array.invert<class_PoolVector2Array_method_invert>`.

----

.. _class_GoostGeometry2D_method_triangulate_multiple_polygons:

- :ref:`Array<class_Array>` **triangulate_multiple_polygons** **(** :ref:`Array<class_Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|

Similar to :ref:`decompose_polygons<class_GoostGeometry2D_method_decompose_polygons>`, but triangulates multiple polygons with the :ref:`DECOMP_TRIANGLES_EC<class_GoostGeometry2D_constant_DECOMP_TRIANGLES_EC>`.

----

.. _class_GoostGeometry2D_method_triangulate_polygon:

- :ref:`Array<class_Array>` **triangulate_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`PolyDecompParameters2D<class_PolyDecompParameters2D>` params=null **)** |const|

Similar to :ref:`decompose_polygons<class_GoostGeometry2D_method_decompose_polygons>`, but triangulates a single polygon with the :ref:`DECOMP_TRIANGLES_EC<class_GoostGeometry2D_constant_DECOMP_TRIANGLES_EC>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`