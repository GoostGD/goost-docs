:github_url: hide

.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GoostGeometry2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GoostGeometry2D:

GoostGeometry2D
===============

**Inherits:** :ref:`Object<class_Object>`

:ref:`Geometry<class_Geometry>` singleton extension.

Description
-----------

Performs various geometry-related operations. Provides simple polygon clipping, offsetting and decomposition functionality, and other geometry utility operations mostly revolving around polygons and polylines.

The methods for polygon operations in this class operate on single polygons only. For more advanced operations on multiple polygons, refer to :ref:`PolyBoolean2D<class_PolyBoolean2D>`, :ref:`PolyOffset2D<class_PolyOffset2D>`, :ref:`PolyDecomp2D<class_PolyDecomp2D>` classes instead.

Tutorials
---------

- `https://goost.readthedocs.io/en/gd3/components/geometry.html <https://goost.readthedocs.io/en/gd3/components/geometry.html>`_

Methods
-------

+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`                       | :ref:`bounding_rect<class_GoostGeometry2D_method_bounding_rect>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points **)** |const|                                                                                                |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>` | :ref:`circle<class_GoostGeometry2D_method_circle>` **(** :ref:`float<class_float>` radius, :ref:`float<class_float>` max_error=0.25 **)** |const|                                                                                          |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`clip_polygons<class_GoostGeometry2D_method_clip_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|                                  |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`clip_polyline_with_polygon<class_GoostGeometry2D_method_clip_polyline_with_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|           |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`decompose_polygon<class_GoostGeometry2D_method_decompose_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                       |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`deflate_polygon<class_GoostGeometry2D_method_deflate_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta **)** |const|                                                          |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`deflate_polyline<class_GoostGeometry2D_method_deflate_polyline>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`float<class_float>` delta **)** |const|                                                       |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`exclude_polygons<class_GoostGeometry2D_method_exclude_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|                            |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`inflate_polygon<class_GoostGeometry2D_method_inflate_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta **)** |const|                                                          |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`intersect_polygons<class_GoostGeometry2D_method_intersect_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|                        |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`intersect_polyline_with_polygon<class_GoostGeometry2D_method_intersect_polyline_with_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const| |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`merge_polygons<class_GoostGeometry2D_method_merge_polygons>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|                                |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`point_in_polygon<class_GoostGeometry2D_method_point_in_polygon>` **(** :ref:`Vector2<class_Vector2>` point, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                    |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`polygon_area<class_GoostGeometry2D_method_polygon_area>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                                 |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                   | :ref:`polygon_centroid<class_GoostGeometry2D_method_polygon_centroid>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                         |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`polygon_perimeter<class_GoostGeometry2D_method_polygon_perimeter>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                       |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`polyline_length<class_GoostGeometry2D_method_polyline_length>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline **)** |const|                                                                                          |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>` | :ref:`regular_polygon<class_GoostGeometry2D_method_regular_polygon>` **(** :ref:`int<class_int>` sides, :ref:`float<class_float>` size **)** |const|                                                                                       |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                       | :ref:`triangulate_polygon<class_GoostGeometry2D_method_triangulate_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|                                                                                   |
+-------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Method Descriptions
-------------------

.. _class_GoostGeometry2D_method_bounding_rect:

- :ref:`Rect2<class_Rect2>` **bounding_rect** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points **)** |const|

Computes the axis-aligned bounding rectangle of given points.

----

.. _class_GoostGeometry2D_method_circle:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **circle** **(** :ref:`float<class_float>` radius, :ref:`float<class_float>` max_error=0.25 **)** |const|

Generates a closed path approximating the shape of a circle with the specified radius.

The ``max_error`` parameter represents the maximum gap in pixels allowed between a circle segment and the boundary of the mathematical circle, with low values increasing the number of vertices. The maximum number of vertices returned is 4096. See also :ref:`regular_polygon<class_GoostGeometry2D_method_regular_polygon>`.

----

.. _class_GoostGeometry2D_method_clip_polygons:

- :ref:`Array<class_Array>` **clip_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|

Performs :ref:`PolyBoolean2D.OP_DIFFERENCE<class_PolyBoolean2D_constant_OP_DIFFERENCE>` between individual polygons.

----

.. _class_GoostGeometry2D_method_clip_polyline_with_polygon:

- :ref:`Array<class_Array>` **clip_polyline_with_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Clips a single ``polyline`` against a single ``polygon`` and returns an array of clipped polylines. This performs :ref:`PolyBoolean2D.OP_DIFFERENCE<class_PolyBoolean2D_constant_OP_DIFFERENCE>` between the polyline and the polygon. Returns an empty array if the ``polygon`` completely encloses ``polyline``. This operation can be thought of as cutting a line with a closed shape.

----

.. _class_GoostGeometry2D_method_decompose_polygon:

- :ref:`Array<class_Array>` **decompose_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Partitions a single polygon into a set of convex polygons with :ref:`PolyDecomp2D.DECOMP_CONVEX_HM<class_PolyDecomp2D_constant_DECOMP_CONVEX_HM>`.

----

.. _class_GoostGeometry2D_method_deflate_polygon:

- :ref:`Array<class_Array>` **deflate_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta **)** |const|

Grows a polygon by ``delta`` pixels. See also :ref:`PolyOffset2D.deflate_polygons<class_PolyOffset2D_method_deflate_polygons>`.

----

.. _class_GoostGeometry2D_method_deflate_polyline:

- :ref:`Array<class_Array>` **deflate_polyline** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`float<class_float>` delta **)** |const|

Grows a single non-closed path into a polygon by ``delta`` pixels. See also :ref:`PolyOffset2D.deflate_polylines<class_PolyOffset2D_method_deflate_polylines>`.

----

.. _class_GoostGeometry2D_method_exclude_polygons:

- :ref:`Array<class_Array>` **exclude_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|

Performs :ref:`PolyBoolean2D.OP_XOR<class_PolyBoolean2D_constant_OP_XOR>` between individual polygons.

----

.. _class_GoostGeometry2D_method_inflate_polygon:

- :ref:`Array<class_Array>` **inflate_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon, :ref:`float<class_float>` delta **)** |const|

Shrinks a polygon by ``delta`` pixels. See also :ref:`PolyOffset2D.inflate_polygons<class_PolyOffset2D_method_inflate_polygons>`.

----

.. _class_GoostGeometry2D_method_intersect_polygons:

- :ref:`Array<class_Array>` **intersect_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|

Performs :ref:`PolyBoolean2D.OP_INTERSECTION<class_PolyBoolean2D_constant_OP_INTERSECTION>` between individual polygons.

----

.. _class_GoostGeometry2D_method_intersect_polyline_with_polygon:

- :ref:`Array<class_Array>` **intersect_polyline_with_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Intersects polyline with polygon and returns an array of intersected polylines. This performs :ref:`PolyBoolean2D.OP_INTERSECTION<class_PolyBoolean2D_constant_OP_INTERSECTION>` between the polyline and the polygon. This operation can be thought of as chopping a line with a closed shape.

----

.. _class_GoostGeometry2D_method_merge_polygons:

- :ref:`Array<class_Array>` **merge_polygons** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_a, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon_b **)** |const|

Performs :ref:`PolyBoolean2D.OP_UNION<class_PolyBoolean2D_constant_OP_UNION>` between individual polygons. If you need to merge multiple polygons, use :ref:`PolyBoolean2D.merge_polygons<class_PolyBoolean2D_method_merge_polygons>` instead.

----

.. _class_GoostGeometry2D_method_point_in_polygon:

- :ref:`int<class_int>` **point_in_polygon** **(** :ref:`Vector2<class_Vector2>` point, :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Returns +1 if the point is *inside* the polygon, 0 if the point is *outside* the polygon, and -1 if the point is *exactly* on the polygon's boundary. Supports arbitrary polygons.

----

.. _class_GoostGeometry2D_method_polygon_area:

- :ref:`float<class_float>` **polygon_area** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Returns ``polygon``'s positive or negative area depending on whether vertices are ordered in clockwise or counterclockwise order. See also :ref:`Geometry.is_polygon_clockwise<class_Geometry_method_is_polygon_clockwise>`. If the order is clockwise, the polygon can be interpreted as an inner polygon (hole), otherwise it's an outer polygon (boundary).

----

.. _class_GoostGeometry2D_method_polygon_centroid:

- :ref:`Vector2<class_Vector2>` **polygon_centroid** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Calculates the centroid (also known as "center of mass" or "center of gravity") of the ``polygon`` and returns the consistent result regardless of polygon orientation, see :ref:`Geometry.is_polygon_clockwise<class_Geometry_method_is_polygon_clockwise>`. For accurate results, the polygon must be strictly simple, meaning there should be no self-intersecting edges.

----

.. _class_GoostGeometry2D_method_polygon_perimeter:

- :ref:`float<class_float>` **polygon_perimeter** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Returns the perimeter of an arbitrary polygon. See also :ref:`polyline_length<class_GoostGeometry2D_method_polyline_length>`.

----

.. _class_GoostGeometry2D_method_polyline_length:

- :ref:`float<class_float>` **polyline_length** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polyline **)** |const|

Returns the total length of the segments representing the polyline. See also :ref:`polygon_perimeter<class_GoostGeometry2D_method_polygon_perimeter>`.

----

.. _class_GoostGeometry2D_method_regular_polygon:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **regular_polygon** **(** :ref:`int<class_int>` sides, :ref:`float<class_float>` size **)** |const|

Generates a regular polygon (triangle, rectangle, pentagon, hexagon etc.) with all equal sides and angles. The specified size can be seen as a radius, with an increasing number of sides approximating a :ref:`circle<class_GoostGeometry2D_method_circle>`.

The order of vertices returned is counterclockwise which makes it an outer polygon by default. To convert it to an inner polygon specifically, use :ref:`PoolVector2Array.invert<class_PoolVector2Array_method_invert>`.

----

.. _class_GoostGeometry2D_method_triangulate_polygon:

- :ref:`Array<class_Array>` **triangulate_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` polygon **)** |const|

Decomposes the polygon into individual triangles using :ref:`PolyDecomp2D.DECOMP_TRIANGLES_MONO<class_PolyDecomp2D_constant_DECOMP_TRIANGLES_MONO>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
